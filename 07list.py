# 파이썬 자료구조
# 자료구조는 대량의 데이터를
# 효율적으로 저장,조회,수정,삭제하기위해
# 요구되는 기능과 기법을 의미
# 대표적인 자료구조: 리스트,튜플,셋,딕셔너리
# 대량의 데이터를 처리할때 속도를 높이고, 메모리를 절약할수있음


# 리스트
# 다른 프로그래밍 언어에서는 배열 array과 유사
# 동일한 유형의 데이터를 1차원 형태로 순차적으로 저장하는 자료구조
# 선언방법은 []에 값들을 하나씩 정의
# 리스트의 각 요소를 참조하려면 변수명[위치값]형식을 사용

# 과일데이터 저장

fruits = ['사과', '포도','수박','참외','복숭아']

#점메

menus = ['햄버거','라면','돈까스','냉면','정식']

# 리스트에서 요소 elements, item 별로 출력
# 첫번째요소의 위치값은 index은 0부터 시작
print(menus[0])
# 인덱스 범위가 벗어나면 오류발생

# 동적으로 리스트 출력하기
menus = []

# 리스트에 요소를 추가하려면 append(값) 함수 사용
# 추가된 요소는 리스트 맨뒤에 부착 - LIFO


# 리스트에는 다른 유형의 데이터도 저장가능 (비추!)
complexs = [1,10.1,'a','bc123', True]
print(complexs)

# 리스트 요소 수정 : 변수명[위치] = 새로운값
menus[2] = '탕수육'
# 탕수육으로 바뀜
print(menus)

#리스트 요소 삭제 : remove(값) - 값으로 삭제
menus.remove('탕수육')
print(menus)

#리스트 요소 삭제 : pop(위치) - 위치로 삭제
menus.pop(1)
print(menus)

# len() 함수 -리스트 요소 갯수 또는 문자열 길이 출력
print(len(menus))
print(len('Hello, World'))

#입력받은 글자 수 확인
msg = input('메세지를 입력하세요 : ')
print(f'입력받은 메세지 길이 : {len(msg)}')

# 누락된 숫자 추가하기